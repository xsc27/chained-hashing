[tox]
minversion = 3.7.0
skip_missing_interpreters = {env:TOX_SKIP_MISSING_INTERPRETERS:true}
isolated_build = true
envlist = py3{9,10,11},docs,lint,style,pkg

[testenv]
description = Execute Tests
py3:    basepython = python3
py39:   basepython = python3.9
py310:  basepython = python3.10
py311:  basepython = python3.11
passenv = CI* DOCKER*
deps = -r requirements/test.txt
commands =
    pytest --cov-report "xml:{envdir}/coverage.xml" --junitxml="{envdir}/junit.xml" {posargs}

[testenv:docs]
description = Build Documentation
basepython = python3
deps = -r requirements/docs.txt
commands =
    mkdocs {posargs:build}

[testenv:lint]
description = Static Analysis
basepython = python3
deps = -r requirements/lint.txt
commands =
    pre-commit run --all-files --show-diff-on-failure --color=always
    flakehell lint src/ tests/
    pylint src/ tests/

[testenv:pkg]
description = Check Distribution Package
basepython = python3
skip_install = true
deps =
    build
    pyroma
    readme_renderer[md]
    twine
commands_pre =
    python3 -m build --wheel --outdir dist
commands =
    pyroma .
    twine check dist/*

[testenv:pin]
description = Check Distribution Package
basepython = python3
skip_install = true
deps = pip-tools
allowlist_externals =
    sh
    mkdir
commands =
    mkdir -p requirements
    pip-compile --allow-unsafe --generate-hashes --output-file=requirements/lock.txt pyproject.toml
    sh -c "for EXTRA in docs lint test; do  \
      cp requirements/lock.txt requirements/$EXTRA.txt ;\
      pip-compile --allow-unsafe --extra=$EXTRA --generate-hashes --reuse-hashes --output-file=requirements/$EXTRA.txt pyproject.toml ;\
    done"
